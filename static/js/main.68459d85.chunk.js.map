{"version":3,"sources":["utils/state/createStore.ts","states/store.ts","theme.ts","routes/history.ts","hooks/useToast.ts","components/common/toast/index.tsx","components/common/toast/utils.ts","routes/index.ts","routes/Routes/index.tsx","components/app/weather/styles.ts","components/app/weather/index.tsx","App.styles.ts","App.tsx","reportWebVitals.ts","index.tsx","constants/common.ts","utils/string.ts","utils/routes/paths.ts","routes/paths.ts","utils/common.ts","services/eventListener.ts","services/toast.ts","services/base.ts","utils/state/createSliceObject.ts","utils/state/createReducerObject.ts","utils/state/createSlice.ts","ui/Spin/styles.ts","ui/Spin/index.tsx","components/common/loading-page/styles.ts","components/common/loading-page/index.tsx","services/metaWeather.ts","states/metaWeather.ts","hooks/useQuery.ts","services/ip.ts","states/ip.ts","services/geoLocation.ts","states/geoLocation.ts"],"names":["isSliceObject","o","saga","createStore","slices","rootReducer","combineReducers","Object","fromEntries","entries","map","reducer","createRootReducer","rootState","initialState","createRootState","rootSaga","all","values","filter","fork","createRootSaga","sagaMiddleware","createSagaMiddleware","enhancer","composeEnhancer","compose","applyMiddleware","store","reduxCreateStore","run","ip","geoLocation","metaWeather","theme","createMuiTheme","palette","primary","main","blue","secondary","lightBlue","typography","caption","fontSize","history","createBrowserHistory","basename","process","baseToastOptions","preventDuplicate","anchorOrigin","vertical","horizontal","useToast","useSnackbar","enqueueSnackbar","closeSnackbar","showToast","useCallback","message","variant","options","hideToast","key","ToastComponent","useEffect","toastService","addListener","removeListener","useToastEffect","Toast","memo","displayName","routes","weatherPaths","dashboard","component","lazy","childRoutes","weatherSearch","weatherCity","flattenRoutes","collectedRoutes","forEach","route","push","RoutesComponent","allRoutes","fallback","path","exact","props","from","to","Routes","useStyles","makeStyles","createStyles","root","position","padding","spacing","flexGrow","title","textDecoration","color","common","white","display","breakpoints","up","grow","down","search","borderRadius","shape","backgroundColor","fade","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","classNamePrefix","WeatherAppComponent","inputRef","React","createRef","classes","useHistory","query","useQuery","handleSubmit","e","preventDefault","searchPath","current","value","location","pathname","includes","Box","data-testid","className","AppBar","Toolbar","generatePath","Typography","noWrap","onSubmit","InputBase","autoComplete","placeholder","input","inputProps","name","defaultValue","WeatherApp","NotFoundPage","App","ThemeProvider","maxSnack","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","NETWORK_TIMEOUT","NETWORK_TIMEOUT_MESSAGE","DATE_FORMAT","TIME_ZONE","INVALID_WOEID_MESSAGE","GEO_ACCESS_KEY","REACT_APP_GEO_ACCESS_KEY","META_WEATHER_PROXY_URL","REACT_APP_META_WEATHER_PROXY_URL","splitter","separator","transformWord","toKebabCase","w","toLowerCase","text","split","join","params","basePath","init","undefined","String","URLSearchParams","toString","createPathWithSearch","woeid","pathRule","rest","assign","isSuccessResponse","res","kind","EventListener","listeners","listener","this","args","index","findIndex","l","splice","updateEventListener","raiseEvent","getErrorCodeAndMessage","error","code","response","status","data","BaseService","config","instance","cachedResponses","requestData","transformData","a","cacheKey","shouldNotifyError","shouldNotifySuccess","timeout","timeoutErrorMessage","cachedRes","request","match","resData","resultData","notify","successRes","Axios","createActionType","createSliceObject","reducers","workers","extraReducer","actions","keys","type","payload","caseReducers","slicer","state","action","reduce","intermediateState","worker","Boolean","watchWorker","watch","takeLatest","createReducerObject","createSlice","settings","isSliceSettings","childrenWrapper","opacity","progressWrapper","top","left","zIndex","modal","loading","SpinComponent","children","wrapperClassName","clsx","CircularProgress","Spin","bottom","right","black","LoadingPageComponent","size","LoadingPage","today","dayjs","format","metaWeatherService","baseURL","headers","authorization","field","url","method","get","metaWeatherSlice","weatherAtLocation","weatherSearchLocation","getWeatherAtLocation","_woeid","resetWeatherSearch","resetWeatherAtLocation","getWeatherAtLocationSuccess","weatherAtLocationData","getWeatherAtLocationFailed","errorData","searchWeatherLocation","_payload","searchWeatherLocationSuccess","weatherSearchLocationData","searchWeatherLocationFailed","handleSearchWeatherLocation","call","service","put","handleGetWeatherAtLocation","metaWeatherActions","useLocation","useMemo","ipService","detect","ipSlice","detectIp","detectSuccess","ipData","detectFailed","handleDetectIp","ipActions","geoLocationService","apiKey","ipAddress","geoLocationSlice","detectGeoLocation","_ip","geoLocationData","handleDetectGeoLocation","geoLocationActions"],"mappings":"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","file":"static/js/main.68459d85.chunk.js","sourcesContent":["import {\n  applyMiddleware,\n  combineReducers,\n  compose,\n  createStore as reduxCreateStore,\n  Reducer,\n  AnyAction,\n  PreloadedState,\n} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { all, fork } from 'redux-saga/effects';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { SliceObject, ReducerObject } from 'types/state';\n\nconst isSliceObject = (\n  o: SliceObject<string, any, any> | ReducerObject<string, any>,\n): o is SliceObject<string, any, any> =>\n  o && !!(o as SliceObject<string, any, any>).saga;\n\nconst createRootReducer = <TSlices extends SlicesBase>(slices: TSlices) =>\n  (combineReducers(\n    Object.fromEntries(\n      Object.entries(slices).map(([key, { reducer }]) => [key, reducer]),\n    ),\n  ) as unknown) as Reducer<RootState<TSlices>, AnyAction>;\n\nconst createRootSaga = <TSlices extends SlicesBase>(slices: TSlices) =>\n  function* rootSaga() {\n    yield all(\n      Object.values(slices)\n        .filter(isSliceObject)\n        .map(({ saga }) => fork(saga)),\n    );\n  };\n\nconst createRootState = <TSlices extends SlicesBase>(slices: TSlices) =>\n  Object.fromEntries(\n    Object.entries(slices).map(([key, { initialState }]) => [\n      key,\n      initialState,\n    ]),\n  ) as PreloadedState<RootState<TSlices>>;\n\nconst createStore = <TSlices extends SlicesBase>(slices: TSlices) => {\n  const rootReducer = createRootReducer(slices);\n  const rootState = createRootState(slices);\n  const rootSaga = createRootSaga(slices);\n  const sagaMiddleware = createSagaMiddleware();\n\n  const composeEnhancer =\n    process.env.NODE_ENV === 'development'\n      ? composeWithDevTools({ trace: true })\n      : compose;\n\n  const enhancer = composeEnhancer(applyMiddleware(sagaMiddleware));\n  const store = reduxCreateStore<RootState<TSlices>, AnyAction, {}, {}>(\n    rootReducer,\n    rootState,\n    enhancer,\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};\n\nexport default createStore;\n\ntype SlicesBase = Record<\n  string,\n  SliceObject<string, any, any> | ReducerObject<string, any>\n>;\n\ntype RootState<TSlices extends SlicesBase> = {\n  [k in keyof TSlices]: TSlices[k]['initialState'];\n};\n","import createStore from 'utils/state/createStore';\nimport ip from './ip';\nimport geoLocation from './geoLocation';\nimport metaWeather from './metaWeather';\n\nconst store = createStore({\n  ip,\n  geoLocation,\n  metaWeather,\n});\n\nexport default store;\nexport type RootState = ReturnType<typeof store['getState']>;\n","import { createMuiTheme } from '@material-ui/core';\nimport blue from '@material-ui/core/colors/blue';\nimport lightBlue from '@material-ui/core/colors/lightBlue';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: blue[500],\n    },\n    secondary: {\n      main: lightBlue['A400'],\n    },\n  },\n  typography: {\n    caption: {\n      fontSize: '0.8125rem',\n    },\n  },\n});\n\nexport default theme;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport { createBrowserHistory } from 'history';\n\nconst history = createBrowserHistory({ basename: process.env.PUBLIC_URL });\nexport default history;\n","import { useCallback } from 'react';\nimport { useSnackbar, OptionsObject } from 'notistack';\n\nconst baseToastOptions: OptionsObject = {\n  preventDuplicate: true,\n  anchorOrigin: { vertical: 'top', horizontal: 'center' },\n};\n\nexport const getToastOption = (options?: OptionsObject) => ({\n  ...baseToastOptions,\n  ...options,\n});\n\nconst useToast = () => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const showToast = useCallback(\n    (message: string, variant: OptionsObject['variant']) =>\n      enqueueSnackbar(message, getToastOption({ variant })),\n    [enqueueSnackbar],\n  );\n\n  const hideToast = useCallback(\n    (key: string | number | undefined) => closeSnackbar(key),\n    [closeSnackbar],\n  );\n\n  return { showToast, hideToast };\n};\n\nexport default useToast;\n","import { FC, memo } from 'react';\nimport { useToastEffect } from './utils';\n\nexport const ToastComponent: FC = () => {\n  useToastEffect();\n  return null;\n};\n\nconst Toast = memo(ToastComponent);\nToast.displayName = 'Toast';\nexport default Toast;\n","import { useEffect } from 'react';\nimport useToast from 'hooks/useToast';\nimport toastService from 'services/toast';\n\nexport const useToastEffect = () => {\n  const { showToast } = useToast();\n\n  useEffect(() => {\n    toastService.addListener(showToast);\n    return () => toastService.removeListener(showToast);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n};\n","import { lazy } from 'react';\nimport { RouteInfo } from 'types/common';\nimport { weatherPaths } from './paths';\n\nconst routes: RouteInfo[] = [\n  /**\n   * DASHBOARD\n   */\n  {\n    ...weatherPaths.dashboard(),\n    component: lazy(() => import('containers/weather/dashboard')),\n  },\n  /**\n   * WEATHERS\n   */\n  {\n    ...weatherPaths.dashboard(),\n    childRoutes: [\n      {\n        ...weatherPaths.weatherSearch(),\n        component: lazy(() => import('containers/weather/weather-search')),\n      },\n      {\n        ...weatherPaths.weatherCity(':woeid'),\n        component: lazy(() => import('containers/weather/weather-city')),\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import LoadingPage from 'components/common/loading-page';\nimport React, { memo, Suspense } from 'react';\nimport { Redirect, Switch, Route } from 'react-router-dom';\nimport { RouteInfo } from 'types/common';\n\nconst flattenRoutes = (routes: RouteInfo[], collectedRoutes: RouteInfo[]) => {\n  routes.forEach((route) => {\n    if (route.childRoutes) {\n      flattenRoutes(route.childRoutes, collectedRoutes);\n    } else {\n      collectedRoutes.push(route);\n    }\n  });\n};\n\nexport const RoutesComponent: React.FC<RoutesProps> = ({ routes }) => {\n  let allRoutes: RouteInfo[] = [];\n  flattenRoutes(routes, allRoutes);\n  return (\n    <Suspense fallback={<LoadingPage />}>\n      <Switch>\n        {allRoutes.map(({ path, exact = true, ...props }) => (\n          <Route {...props} key={path} path={path} exact={exact} />\n        ))}\n        <Redirect from=\"/*\" to=\"/not-found\" />\n      </Switch>\n    </Suspense>\n  );\n};\n\nconst Routes = memo(RoutesComponent);\nRoutes.displayName = 'Routes';\n\nexport default Routes;\n\nexport interface RoutesProps {\n  routes: RouteInfo[];\n}\n","import { makeStyles, createStyles, fade, Theme } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'relative',\n      padding: theme.spacing(2, 0),\n      flexGrow: 1,\n    },\n    title: {\n      textDecoration: 'none',\n      color: theme.palette.common.white,\n      display: 'none',\n      [theme.breakpoints.up('sm')]: {\n        display: 'block',\n      },\n    },\n    grow: {\n      flexGrow: 1,\n      [theme.breakpoints.down('xs')]: {\n        display: 'none',\n      },\n    },\n    search: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      '&:hover': {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginLeft: 0,\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        marginLeft: theme.spacing(1),\n        width: 'auto',\n      },\n    },\n    searchIcon: {\n      padding: theme.spacing(0, 2),\n      height: '100%',\n      position: 'absolute',\n      pointerEvents: 'none',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n    },\n    inputRoot: {\n      color: 'inherit',\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      // vertical padding + font size from searchIcon\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: '100%',\n      [theme.breakpoints.up('sm')]: {\n        width: '8em',\n        '&:focus': {\n          width: '14em',\n        },\n      },\n      [theme.breakpoints.down('xs')]: {\n        width: '100%',\n      },\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'WeatherApp' });\n\nexport default useStyles;\n","import React, { memo, useCallback, useEffect } from 'react';\nimport { generatePath, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { Box, InputBase, Typography, Toolbar, AppBar } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport routes from 'routes';\nimport Routes from 'routes/Routes';\nimport { weatherPaths } from 'routes/paths';\nimport useQuery from 'hooks/useQuery';\nimport useStyles from './styles';\n\nexport const WeatherAppComponent: React.FC = () => {\n  const inputRef = React.createRef<HTMLInputElement>();\n  const classes = useStyles();\n  const history = useHistory();\n  const query = useQuery();\n  const handleSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      const searchPath = weatherPaths.weatherSearch({\n        query: (inputRef.current as HTMLInputElement).value,\n      }).path;\n      history.push(searchPath);\n    },\n    [history, inputRef],\n  );\n\n  // Clear input ref if path not on search\n  useEffect(() => {\n    if (inputRef.current && !history.location.pathname.includes('search')) {\n      inputRef.current.value = '';\n    }\n  }, [history.location.pathname, inputRef]);\n  return (\n    <Box data-testid=\"WeatherApp\" className={classes.root}>\n      <AppBar position=\"fixed\">\n        <Toolbar>\n          <Link\n            className={classes.title}\n            to={generatePath(weatherPaths.dashboard().path)}\n          >\n            <Typography variant=\"h6\" noWrap>\n              Weather App\n            </Typography>\n          </Link>\n          <div className={classes.grow} />\n          <div className={classes.search}>\n            <form data-testid=\"searchForm\" onSubmit={handleSubmit}>\n              <div className={classes.searchIcon}>\n                <SearchIcon />\n              </div>\n              <InputBase\n                autoComplete={'off'}\n                placeholder=\"Search city…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{\n                  'aria-label': 'search',\n                  'data-testid': 'searchInput',\n                }}\n                name=\"query\"\n                defaultValue={query.query}\n                inputRef={inputRef}\n              />\n            </form>\n          </div>\n        </Toolbar>\n      </AppBar>\n      <Routes routes={routes} />\n    </Box>\n  );\n};\nconst WeatherApp = memo(WeatherAppComponent);\nWeatherApp.displayName = 'WeatherApp';\n\nexport default WeatherApp;\n","import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      padding: theme.spacing(8, 3, 0),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'App' });\n\nexport default useStyles;\n","import { lazy, Suspense } from 'react';\nimport { ThemeProvider, CssBaseline } from '@material-ui/core';\nimport { Provider } from 'react-redux';\nimport { Switch, Router, Route, Redirect } from 'react-router-dom';\nimport { SnackbarProvider } from 'notistack';\n\nimport store from 'states/store';\nimport theme from 'theme';\nimport history from 'routes/history';\nimport Toast from 'components/common/toast';\nimport WeatherApp from 'components/app/weather';\nimport LoadingPage from 'components/common/loading-page';\nimport useStyles from './App.styles';\n\nconst NotFoundPage = lazy(() => import('containers/not-found'));\nconst App: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <ThemeProvider theme={theme}>\n        <SnackbarProvider maxSnack={3}>\n          <Provider store={store}>\n            <CssBaseline />\n            <Toast />\n            <Router history={history}>\n              <Suspense fallback={<LoadingPage />}>\n                <Switch>\n                  <Route path=\"/weathers\">\n                    <WeatherApp />\n                  </Route>\n                  <Redirect from=\"/\" to=\"/weathers\" exact />\n                  <Route component={NotFoundPage} />\n                </Switch>\n              </Suspense>\n            </Router>\n          </Provider>\n        </SnackbarProvider>\n      </ThemeProvider>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// NUMBERS\nexport const NETWORK_TIMEOUT = 30000;\n\n// STRINGS\nexport const NETWORK_TIMEOUT_MESSAGE = 'Network Timeout';\nexport const DATE_FORMAT = 'ddd D MMM';\nexport const TIME_ZONE = 'Asia/Ho_Chi_Minh';\nexport const INVALID_WOEID_MESSAGE = 'Invalid location ID';\nexport const GEO_ACCESS_KEY = process.env.REACT_APP_GEO_ACCESS_KEY ?? '';\nexport const META_WEATHER_PROXY_URL =\n  process.env.REACT_APP_META_WEATHER_PROXY_URL ?? '';\n","const exhaustedSplitter = /[\\s_-]|(?=[A-Z0-9])/;\n\nconst createTransform = (\n  splitter: string | RegExp,\n  separator: string,\n  transformWord: (word: string) => string,\n) => (text: string) => text.split(splitter).map(transformWord).join(separator);\n\nexport const toKebabCase = createTransform(exhaustedSplitter, '-', (w) =>\n  w.toLowerCase(),\n);\n","import { toKebabCase } from 'utils/string';\n\nexport const createPaths = <TMap extends Record<string, PathRule<any>>>(\n  basename: string,\n  map: TMap,\n) =>\n  (Object.fromEntries(\n    Object.entries(map).map(([key, pathRule]) => {\n      const { title, path, ...rest } = pathRule;\n      return [\n        key,\n        Object.assign((...args: any[]) => {\n          let pathname: string;\n          switch (typeof path) {\n            case 'function':\n              pathname = path(...args);\n              break;\n            case 'string':\n              pathname = path;\n              break;\n            default:\n              pathname = toKebabCase(key);\n              break;\n          }\n          return { ...rest, title, path: `/${basename}/${pathname}` };\n        }, pathRule),\n      ];\n    }),\n  ) as unknown) as {\n    [k in keyof TMap]: PathCreator<PathRuleArgs<TMap[k]>> &\n      PathRule<PathRuleArgs<TMap[k]>>;\n  };\n\nexport interface PathRule<TArgs extends any[]> {\n  title: string;\n  path?: string | ((...args: TArgs) => string);\n}\n\nexport interface PathInfo {\n  title: string;\n  path: string;\n}\n\nexport type PathCreator<TArgs extends any[]> = (...args: TArgs) => PathInfo;\n\ntype PathRuleArgs<TPathRule extends PathRule<any>> = TPathRule['path'] extends (\n  ...args: any[]\n) => any\n  ? Parameters<TPathRule['path']>\n  : [];\n","import { WOEID } from 'types/metaWeather';\nimport { createPaths } from 'utils/routes/paths';\n\nconst createPathWithSearch = (basePath: string, params: object = {}) => {\n  const init = Object.fromEntries(\n    Object.entries(params)\n      .filter(\n        ([, value]) => value !== undefined && value !== null && value !== '',\n      )\n      .map(([key, value]) => [key, String(value)]),\n  );\n  const search = new URLSearchParams(init).toString();\n  return search ? `${basePath}?${search}` : basePath;\n};\n\nexport const weatherPaths = createPaths('weathers', {\n  dashboard: {\n    title: 'Dashboard',\n    path: '',\n  },\n  weatherSearch: {\n    title: 'Weather Search',\n    path: (params?: { query: string }) =>\n      createPathWithSearch('search', params),\n  },\n  weatherCity: {\n    title: 'Weather City',\n    path: (woeid: WOEID) => `${woeid}`,\n  },\n});\n","import { BaseResponse, SuccessResponse, FailResponse } from 'types/common';\n\nexport function isSuccessResponse<TData>(\n  res: BaseResponse<TData>,\n): res is SuccessResponse<TData> {\n  return res.kind === 'success';\n}\n\nexport function isFailedResponse<TData>(\n  res: BaseResponse<TData>,\n): res is FailResponse {\n  return res.kind === 'failed';\n}\n","export class EventListener<TArgs extends any[]> {\n  private listeners: ((...args: TArgs) => void)[] = [];\n\n  addListener(listener: (...args: TArgs) => void) {\n    this.listeners.push(listener);\n  }\n\n  raiseEvent(...args: TArgs) {\n    this.listeners.forEach((listener) => listener?.(...args));\n  }\n\n  removeListener(listener: (...args: TArgs) => void) {\n    const index = this.listeners.findIndex((l) => l === listener);\n    if (index > -1) {\n      this.listeners.splice(index, 1);\n    }\n  }\n}\n","import { OptionsObject } from 'notistack';\nimport { EventListener } from 'services/eventListener';\n\nclass ToastService {\n  private updateEventListener = new EventListener<\n    [string, OptionsObject['variant']]\n  >();\n\n  addListener(\n    listener: (message: string, variant: OptionsObject['variant']) => void,\n  ) {\n    this.updateEventListener.addListener(listener);\n  }\n\n  removeListener(\n    listener: (message: string, variant: OptionsObject['variant']) => void,\n  ) {\n    this.updateEventListener.removeListener(listener);\n  }\n\n  notify(message: string, variant: OptionsObject['variant']) {\n    this.updateEventListener.raiseEvent(message, variant);\n  }\n}\n\nconst toastService = new ToastService();\n\nexport default toastService;\n","import Axios, { AxiosRequestConfig, AxiosInstance, AxiosError } from 'axios';\nimport { BaseResponse, ServiceErrorState, SuccessResponse } from 'types/common';\nimport { NETWORK_TIMEOUT, NETWORK_TIMEOUT_MESSAGE } from 'constants/common';\nimport toastService from './toast';\n\nconst getErrorCodeAndMessage = (error: AxiosError) => ({\n  code: error?.response?.status || 0,\n  message: error.response?.data?.message || error?.message || 'Unknown error',\n});\n\nexport default abstract class BaseService {\n  private readonly instance: AxiosInstance;\n\n  private readonly cachedResponses: Record<\n    string,\n    SuccessResponse<unknown>\n  > = {};\n\n  constructor(config?: AxiosRequestConfig) {\n    this.instance = Axios.create(config);\n  }\n\n  protected requestData = async <TResponseData, TResultData = TResponseData>(\n    {\n      cacheKey,\n      shouldNotifyError = true,\n      shouldNotifySuccess = false,\n      timeout = NETWORK_TIMEOUT,\n      timeoutErrorMessage = NETWORK_TIMEOUT_MESSAGE,\n      ...rest\n    }: BaseRequestConfig,\n    transformData?: TransformData<TResponseData, TResultData>,\n  ): Promise<BaseResponse<TResultData>> => {\n    if (cacheKey) {\n      const cachedRes = this.cachedResponses[cacheKey];\n      if (cachedRes) return cachedRes as SuccessResponse<TResultData>;\n    }\n\n    let code: number;\n    let message: string;\n    let data: unknown;\n\n    try {\n      const res = await this.instance.request<TResponseData>({\n        timeout,\n        timeoutErrorMessage,\n        ...rest,\n      });\n\n      ({ status: code, data } = res);\n\n      if (code.toString().match(/^2\\d{2,5}/)) {\n        const resData = res.data;\n        const resultData = (transformData\n          ? await transformData(resData)\n          : resData) as TResultData;\n\n        if (shouldNotifySuccess) toastService.notify('Success!', 'success');\n\n        const successRes: SuccessResponse<TResultData> = {\n          kind: 'success',\n          data: resultData,\n        };\n\n        if (cacheKey) this.cachedResponses[cacheKey] = successRes;\n\n        return successRes;\n      }\n    } catch (error) {\n      ({ code, message } = getErrorCodeAndMessage(error));\n      data = { code, message };\n      if (shouldNotifyError) toastService.notify(message, 'error');\n    }\n\n    return {\n      kind: 'failed',\n      data: data as ServiceErrorState,\n    };\n  };\n}\n\nexport interface BaseRequestConfig extends AxiosRequestConfig {\n  shouldNotifyError?: boolean;\n  shouldNotifySuccess?: boolean;\n  cacheKey?: string;\n}\n\nexport type TransformData<TFrom, TTo> = (data: TFrom) => TTo | Promise<TTo>;\n","import { Reducer } from 'redux';\nimport { takeLatest, all, fork } from 'redux-saga/effects';\nimport {\n  SliceReducersBase,\n  SliceSettings,\n  SliceObject,\n  PayloadActionCreator,\n  PayloadAction,\n  Actions,\n} from 'types/state';\n\nconst createActionType = (name: string, key: string) => `${name}/${key}`;\n\nconst createSliceObject = <\n  TName extends string,\n  TState,\n  TSliceReducers extends SliceReducersBase<TState>\n>({\n  name,\n  initialState,\n  reducers,\n  workers = {},\n  extraReducer,\n}: SliceSettings<TName, TState, TSliceReducers>): SliceObject<\n  TName,\n  TState,\n  TSliceReducers\n> => {\n  const actions = (Object.fromEntries(\n    Object.keys(reducers).map<[string, PayloadActionCreator<string, any>]>(\n      (key) => {\n        const type = createActionType(name, key);\n        const action = Object.assign((payload: any) => ({ type, payload }), {\n          type,\n        });\n        return [key, action];\n      },\n    ),\n  ) as unknown) as Actions<TState, TSliceReducers>;\n\n  const caseReducers = Object.fromEntries(\n    Object.entries(reducers).map(([key, slicer]) => [\n      createActionType(name, key),\n      slicer,\n    ]),\n  );\n\n  const reducer: Reducer<TState, PayloadAction<string, any>> = (\n    state = initialState,\n    action,\n  ) => {\n    const { type, payload } = action;\n    const reduce = caseReducers[type];\n    const intermediateState = reduce ? reduce(state, payload) : state;\n    return extraReducer?.(intermediateState, action) ?? intermediateState;\n  };\n\n  const saga = function* saga() {\n    yield all(\n      Object.entries(workers)\n        .filter(([, worker]) => Boolean(worker))\n        .map(([key, worker]) => {\n          const type = createActionType(name, key);\n          const watchWorker = function* watch() {\n            yield takeLatest(type, worker!(actions));\n          };\n          return fork(watchWorker);\n        }),\n    );\n  };\n\n  return { name, initialState, actions, reducer, saga };\n};\n\nexport default createSliceObject;\n","import { ReducerSettings, ReducerObject } from 'types/state';\n\nconst createReducerObject = <TName extends string, TState>({\n  name,\n  initialState,\n  reducer,\n}: ReducerSettings<TName, TState>): ReducerObject<TName, TState> => ({\n  name,\n  initialState,\n  reducer,\n});\n\nexport default createReducerObject;\n","import {\n  SliceReducersBase,\n  SliceSettings,\n  SliceObject,\n  ReducerSettings,\n  ReducerObject,\n} from 'types/state';\nimport createSliceObject from './createSliceObject';\nimport createReducerObject from './createReducerObject';\n\nconst isSliceSettings = (\n  settings: SliceSettings<any, any, any> | ReducerSettings<any, any>,\n): settings is SliceSettings<any, any, any> =>\n  !!settings && !!(settings as SliceSettings<any, any, any>).reducers;\n\nfunction createSlice<\n  TName extends string,\n  TState,\n  TSliceReducers extends SliceReducersBase<TState>\n>(\n  settings: SliceSettings<TName, TState, TSliceReducers>,\n): SliceObject<TName, TState, TSliceReducers>;\nfunction createSlice<TName extends string, TState>(\n  settings: ReducerSettings<TName, TState>,\n): ReducerObject<TName, TState>;\nfunction createSlice(\n  settings: SliceSettings<any, any, any> | ReducerSettings<any, any>,\n) {\n  return isSliceSettings(settings)\n    ? createSliceObject(settings)\n    : createReducerObject(settings);\n}\n\nexport default createSlice;\n","import { makeStyles, Theme, createStyles } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'relative',\n    },\n    childrenWrapper: {\n      '&$loading': {\n        opacity: 0.5,\n      },\n    },\n    progressWrapper: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      width: '100%',\n      height: '100%',\n      display: 'none',\n      justifyContent: 'center',\n      alignItems: 'center',\n      zIndex: theme.zIndex.modal,\n      '&$loading': {\n        display: 'flex',\n      },\n    },\n    loading: {},\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'Spin' });\n\nexport default useStyles;\n","import React, { FC, memo } from 'react';\nimport { CircularProgress } from '@material-ui/core';\nimport { CircularProgressProps } from '@material-ui/core/CircularProgress';\nimport clsx from 'clsx';\nimport useStyles from './styles';\n\nexport const SpinComponent: FC<SpinProps> = ({\n  children,\n  className,\n  color = 'secondary',\n  loading,\n  wrapperClassName,\n  ...props\n}) => {\n  const classes = useStyles();\n\n  return (\n    <div data-testid=\"Spin\" className={clsx(classes.root, className)}>\n      <div\n        className={clsx(classes.childrenWrapper, wrapperClassName, {\n          [classes.loading]: loading,\n        })}\n      >\n        {children}\n      </div>\n      <div\n        className={clsx(classes.progressWrapper, {\n          [classes.loading]: loading,\n        })}\n      >\n        <CircularProgress {...props} color={color} />\n      </div>\n    </div>\n  );\n};\n\nconst Spin = memo(SpinComponent);\nSpin.displayName = 'Spin';\nexport default Spin;\n\nexport interface SpinProps extends CircularProgressProps {\n  children?: React.ReactNode;\n  loading?: boolean;\n  wrapperClassName?: string;\n}\n","import { makeStyles, createStyles, fade, Theme } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'fixed',\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n      zIndex: 1200,\n      backgroundColor: fade(theme.palette.common.black, 0.3),\n      transition: theme.transitions.create('all'),\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'LoadingPage' });\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport Spin from 'ui/Spin';\nimport useStyles from './styles';\n\nexport const LoadingPageComponent: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Spin\n      data-testid=\"LoadingPage\"\n      loading\n      color=\"primary\"\n      className={classes.root}\n      size={72}\n    />\n  );\n};\n\nconst LoadingPage = memo(LoadingPageComponent);\nLoadingPage.displayName = 'LoadingPage';\n\nexport default LoadingPage;\n","import dayjs from 'dayjs';\nimport { DATE_FORMAT, META_WEATHER_PROXY_URL } from 'constants/common';\nimport {\n  WeatherAtLocationData,\n  WeatherSearchLocationData,\n  WOEID,\n} from 'types/metaWeather';\nimport BaseService from './base';\n\nconst today = dayjs().format(DATE_FORMAT);\n\nclass MetaWeatherService extends BaseService {\n  constructor() {\n    super({\n      baseURL: META_WEATHER_PROXY_URL,\n      headers: {\n        authorization: 'fast-nguyen',\n      },\n    });\n  }\n  search = ({ value, field }: SearchLocationPayload) => {\n    const params = new URLSearchParams({\n      [field]: value,\n    });\n    return this.requestData<WeatherSearchLocationData>({\n      url: `/location/search?${params}`,\n      method: 'GET',\n      cacheKey: `${field}:${value}:${today}`,\n    });\n  };\n  get = (woeid: WOEID) => {\n    return this.requestData<WeatherAtLocationData>({\n      url: `/location/${woeid}`,\n      method: 'GET',\n    });\n  };\n}\n\nconst metaWeatherService = new MetaWeatherService();\nexport default metaWeatherService;\n\nexport type SearchLocationField = 'query' | 'lattlong';\nexport interface SearchLocationPayload {\n  value: string;\n  field: SearchLocationField;\n}\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { call, put } from 'redux-saga/effects';\nimport service, { SearchLocationPayload } from 'services/metaWeather';\nimport {\n  WeatherAtLocationData,\n  WeatherSearchLocationData,\n  WeatherState,\n  WOEID,\n} from 'types/metaWeather';\nimport { BaseResponse, ServiceErrorState } from 'types/common';\nimport { isSuccessResponse } from 'utils/common';\nimport createSlice from 'utils/state/createSlice';\n\nconst initialState: WeatherState = {\n  weatherAtLocation: {},\n  weatherSearchLocation: {},\n};\n\nconst metaWeatherSlice = createSlice({\n  name: 'metaWeather',\n  initialState,\n  reducers: {\n    getWeatherAtLocation: (state: WeatherState, _woeid: WOEID) => ({\n      ...state,\n      weatherAtLocation: {\n        ...state.weatherAtLocation,\n        loading: true,\n        message: undefined,\n      },\n    }),\n    resetWeatherSearch: (state: WeatherState) => ({\n      ...state,\n      weatherSearchLocation: {\n        ...state.weatherSearchLocation,\n        data: undefined,\n      },\n    }),\n    resetWeatherAtLocation: (state: WeatherState) => ({\n      ...state,\n      weatherAtLocation: {\n        ...state.weatherAtLocation,\n        data: undefined,\n      },\n    }),\n    getWeatherAtLocationSuccess: (\n      state: WeatherState,\n      weatherAtLocationData: WeatherAtLocationData,\n    ) => ({\n      ...state,\n      weatherAtLocation: {\n        ...state.weatherAtLocation,\n        data: weatherAtLocationData,\n        loading: false,\n        message: undefined,\n      },\n    }),\n    getWeatherAtLocationFailed: (\n      state: WeatherState,\n      errorData: ServiceErrorState,\n    ) => ({\n      ...state,\n      weatherAtLocation: {\n        ...state.weatherAtLocation,\n        ...errorData,\n        data: undefined,\n        loading: false,\n      },\n    }),\n    searchWeatherLocation: (\n      state: WeatherState,\n      _payload: SearchLocationPayload,\n    ) => {\n      return {\n        ...state,\n        weatherSearchLocation: {\n          ...state.weatherSearchLocation,\n          loading: true,\n          message: undefined,\n        },\n      };\n    },\n    searchWeatherLocationSuccess: (\n      state: WeatherState,\n      weatherSearchLocationData: WeatherSearchLocationData,\n    ) => {\n      return {\n        ...state,\n        weatherSearchLocation: {\n          ...state.weatherSearchLocation,\n          data: weatherSearchLocationData,\n          loading: false,\n          message: undefined,\n        },\n      };\n    },\n    searchWeatherLocationFailed: (\n      state: WeatherState,\n      errorData: ServiceErrorState,\n    ) => {\n      return {\n        ...state,\n        weatherSearchLocation: {\n          ...state.weatherSearchLocation,\n          ...errorData,\n          data: undefined,\n          loading: false,\n        },\n      };\n    },\n  },\n  workers: {\n    searchWeatherLocation: ({\n      searchWeatherLocationSuccess,\n      searchWeatherLocationFailed,\n    }) =>\n      function* handleSearchWeatherLocation({ payload }) {\n        const res = (yield call(\n          service.search,\n          payload,\n        )) as BaseResponse<WeatherSearchLocationData>;\n\n        if (isSuccessResponse(res)) {\n          yield put(searchWeatherLocationSuccess(res.data));\n        } else {\n          yield put(searchWeatherLocationFailed(res.data));\n        }\n      },\n    getWeatherAtLocation: ({\n      getWeatherAtLocationSuccess,\n      getWeatherAtLocationFailed,\n    }) =>\n      function* handleGetWeatherAtLocation({ payload: woeid }) {\n        const res = (yield call(\n          service.get,\n          woeid,\n        )) as BaseResponse<WeatherAtLocationData>;\n\n        if (isSuccessResponse(res)) {\n          yield put(getWeatherAtLocationSuccess(res.data));\n        } else {\n          yield put(getWeatherAtLocationFailed(res.data));\n        }\n      },\n  },\n});\n\nexport default metaWeatherSlice;\nexport const { actions: metaWeatherActions } = metaWeatherSlice;\n","import { useMemo } from 'react';\nimport { useLocation } from 'react-router';\n\nconst useQuery = () => {\n  const location = useLocation();\n  const query = useMemo(() => {\n    const params = new URLSearchParams(location.search);\n    return Object.fromEntries(params.entries());\n  }, [location.search]);\n  return query;\n};\n\nexport default useQuery;\n","import { IpResponseData } from 'types/ip';\nimport BaseService from './base';\n\nclass IpService extends BaseService {\n  constructor() {\n    super({\n      baseURL: `https://api.ipify.org`,\n    });\n  }\n  detect = () => {\n    return this.requestData<IpResponseData>({\n      url: '/?format=json',\n      method: 'GET',\n    });\n  };\n}\n\nconst ipService = new IpService();\nexport default ipService;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { call, put } from 'redux-saga/effects';\nimport service from 'services/ip';\nimport { IpResponseData, IpState } from 'types/ip';\nimport { BaseResponse, ServiceErrorState } from 'types/common';\nimport { isSuccessResponse } from 'utils/common';\nimport createSlice from 'utils/state/createSlice';\n\nconst initialState: IpState = {};\n\nconst ipSlice = createSlice({\n  name: 'ip',\n  initialState,\n  reducers: {\n    detectIp: (state: IpState) => ({\n      ...state,\n      loading: true,\n    }),\n    detectSuccess: (state: IpState, ipData: IpResponseData) => ({\n      ...state,\n      data: ipData,\n      loading: false,\n    }),\n    detectFailed: (state: IpState, error: ServiceErrorState) => ({\n      ...state,\n      ...error,\n      data: undefined,\n      loading: false,\n    }),\n  },\n  workers: {\n    detectIp: ({ detectSuccess, detectFailed }) =>\n      function* handleDetectIp() {\n        const res = (yield call(\n          service.detect,\n        )) as BaseResponse<IpResponseData>;\n\n        if (isSuccessResponse(res)) {\n          yield put(detectSuccess(res.data));\n        } else {\n          yield put(detectFailed(res.data));\n        }\n      },\n  },\n});\n\nexport default ipSlice;\nexport const { actions: ipActions } = ipSlice;\n","import { LocationResponseData } from 'types/geoLocation';\nimport { GEO_ACCESS_KEY } from 'constants/common';\nimport BaseService from './base';\n\nclass GeoLocationService extends BaseService {\n  constructor() {\n    super({\n      baseURL: 'https://ip-geolocation.whoisxmlapi.com',\n    });\n  }\n\n  detect = (ip: string) => {\n    const params = new URLSearchParams({\n      apiKey: GEO_ACCESS_KEY,\n      ipAddress: ip,\n    });\n    return this.requestData<LocationResponseData>({\n      url: `/api/v1?${params}`,\n      method: 'GET',\n      cacheKey: ip, // Cache response by ip\n    });\n  };\n}\n\nconst geoLocationService = new GeoLocationService();\nexport default geoLocationService;\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { call, put } from 'redux-saga/effects';\nimport service from 'services/geoLocation';\nimport { LocationResponseData, GeoLocationState } from 'types/geoLocation';\nimport { BaseResponse, ServiceErrorState } from 'types/common';\nimport { isSuccessResponse } from 'utils/common';\nimport createSlice from 'utils/state/createSlice';\n\nconst initialState: GeoLocationState = {};\n\nconst geoLocationSlice = createSlice({\n  name: 'geoLocation',\n  initialState,\n  reducers: {\n    detectGeoLocation: (state: GeoLocationState, _ip: string) => ({\n      ...state,\n      loading: true,\n    }),\n    detectSuccess: (\n      state: GeoLocationState,\n      geoLocationData: LocationResponseData,\n    ) => ({\n      ...state,\n      data: geoLocationData,\n      loading: false,\n    }),\n    detectFailed: (state: GeoLocationState, error: ServiceErrorState) => ({\n      ...state,\n      ...error,\n      data: undefined,\n      loading: false,\n    }),\n  },\n  workers: {\n    detectGeoLocation: ({ detectSuccess, detectFailed }) =>\n      function* handleDetectGeoLocation({ payload: ip }) {\n        const res = (yield call(\n          service.detect,\n          ip,\n        )) as BaseResponse<LocationResponseData>;\n\n        if (isSuccessResponse(res)) {\n          yield put(detectSuccess(res.data));\n        } else {\n          yield put(detectFailed(res.data));\n        }\n      },\n  },\n});\n\nexport default geoLocationSlice;\nexport const { actions: geoLocationActions } = geoLocationSlice;\n"],"sourceRoot":""}
{"version":3,"sources":["containers/weather/weather-city/styles.ts","containers/weather/weather-city/index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","position","classNamePrefix","WeatherCityComponent","classes","isMounted","useIsMounted","woeid","useParams","useWeatherAtLocation","loading","data","message","useResetWeatherAtLocation","Box","data-testid","className","Grid","container","justify","item","xs","textAlign","Typography","variant","component","gutterBottom","isValidWoeid","INVALID_WOEID_MESSAGE","WeatherCity","memo","displayName"],"mappings":"mTAWeA,EAFGC,aAPH,SAACC,GAAD,OACbC,YAAa,CACXC,KAAM,CACJC,SAAU,gBAIqB,CAAEC,gBAAiB,gBCG3CC,EAAiC,WAC5C,IAAMC,EAAUR,IACVS,EAAYC,cACVC,EAAUC,cAAVD,MAH0C,EAIfE,YAAqBF,GAAhDG,EAJ0C,EAI1CA,QAASC,EAJiC,EAIjCA,KAAMC,EAJ2B,EAI3BA,QAIvB,OADAC,cAEE,eAACC,EAAA,EAAD,CAAKC,cAAY,cAAcC,UAAWZ,EAAQJ,KAAlD,WACIU,IAAYL,IAAc,cAAC,IAAD,IAC3BM,GAAQ,cAAC,IAAD,CAAaA,KAAMA,IAC5B,eAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,eAAxB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAG,OAAd,SACE,cAACP,EAAA,EAAD,CAAKQ,UAAU,SAAf,SACE,eAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKC,cAAY,EAApD,WACIC,YAAapB,IAAUqB,IACxBhB,SAIP,cAACK,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,WAMfQ,EAAcC,eAAK3B,GACzB0B,EAAYE,YAAc,cAEXF","file":"static/js/7.03c73f37.chunk.js","sourcesContent":["import { makeStyles, createStyles, Theme } from '@material-ui/core';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      position: 'relative',\n    },\n  });\n\nconst useStyles = makeStyles(styles, { classNamePrefix: 'WeatherCity' });\n\nexport default useStyles;\n","import React, { memo } from 'react';\nimport { useParams } from 'react-router';\nimport { Box, Grid, Typography } from '@material-ui/core';\nimport useWeatherAtLocation from 'hooks/useWeatherAtLocation';\nimport useIsMounted from 'hooks/useIsMounted';\nimport useResetWeatherAtLocation from 'hooks/useResetWeatherAtLocation';\nimport CityWeather from 'components/weather/city-weather';\nimport LoadingPage from 'components/common/loading-page';\nimport { isValidWoeid } from 'utils/metaWeather';\nimport { INVALID_WOEID_MESSAGE } from 'constants/common';\nimport useStyles from './styles';\n\nexport const WeatherCityComponent: React.FC = () => {\n  const classes = useStyles();\n  const isMounted = useIsMounted();\n  const { woeid } = useParams<{ woeid: string }>();\n  const { loading, data, message } = useWeatherAtLocation(woeid);\n\n  // Refresh weather at location\n  useResetWeatherAtLocation();\n  return (\n    <Box data-testid=\"WeatherCity\" className={classes.root}>\n      {(loading || !isMounted) && <LoadingPage />}\n      {data && <CityWeather data={data} />}\n      <Grid container justify=\"space-around\">\n        <Grid item xs=\"auto\">\n          <Box textAlign=\"center\">\n            <Typography variant=\"h5\" component=\"h5\" gutterBottom>\n              {!isValidWoeid(woeid) && INVALID_WOEID_MESSAGE}\n              {message}\n            </Typography>\n          </Box>\n        </Grid>\n        <Grid item xs></Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nconst WeatherCity = memo(WeatherCityComponent);\nWeatherCity.displayName = 'WeatherCity';\n\nexport default WeatherCity;\n"],"sourceRoot":""}